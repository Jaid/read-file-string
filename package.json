{
  "webpackConfigJaid": "nodeLib",
  "version": "1.0.4",
  "author": "Jaid <jaid.jsx@gmail.com> (https://github.com/Jaid)",
  "dependencies": {
    "fs-extra": "^8.1.0"
  },
  "devDependencies": {
    "acorn": "^8.2.4",
    "babel-jest": "^26.6.3",
    "babel-preset-jaid": "^11.0.0",
    "browserslist-config-jaid-node": "^3.0.0",
    "eslint": "^7.27.0",
    "eslint-config-jaid": "^1.49.0",
    "jest": "^26.6.3",
    "rimraf": "^3.0.2",
    "webpack": "^5.37.1",
    "webpack-config-jaid": "^12.2.0"
  },
  "scripts": {
    "clean": "rimraf dist/",
    "babel:prod": "rimraf dist/transpiled/production && NODE_ENV=production babel --out-dir dist/transpiled/production --source-maps true src",
    "babel:dev": "rimraf dist/transpiled/development && NODE_ENV=development babel --out-dir dist/transpiled/development src",
    "babel:test": "rimraf dist/transpiled/test && NODE_ENV=test babel --out-dir dist/transpiled/test src",
    "build:prod": "NODE_ENV=production webpack",
    "build:dev": "NODE_ENV=development webpack",
    "test": "npm run build:prod && NODE_ENV=production MAIN=$(npx find-by-extension-cli js --fullPath --cwd dist/package/production) jest --runInBand",
    "test:coverage": "npm run test:dev -- --coverage --json --outputFile=dist/jest/stats.json",
    "test:dev": "npm run build:dev && NODE_ENV=test MAIN=$(npx find-by-extension-cli js --fullPath --cwd dist/package/development) jest --runInBand",
    "test:debug": "DEBUG=\"$DEBUG,$(basename $PWD),$(basename $PWD):*\" NODE_ENV=test node --inspect=9229 node_modules/jest/bin/jest.js --runInBand",
    "prepareActionJest": "npm run build:prod"
  },
  "name": "read-file-string",
  "description": "Returns file content as a UTF-8 string. Returns null if file does not exist (or is a directory) instead of throwing an Error.",
  "funding": "https://github.com/sponsors/jaid",
  "repository": {
    "type": "git",
    "url": "https://github.com/jaid/read-file-string"
  },
  "homepage": "https://github.com/Jaid/read-file-string",
  "keywords": [
    "file",
    "filesystem",
    "lib",
    "library",
    "load-file",
    "loader",
    "promise",
    "read-file",
    "string",
    "util",
    "utility"
  ]
}
